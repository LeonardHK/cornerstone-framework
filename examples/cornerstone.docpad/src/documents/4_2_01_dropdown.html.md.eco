---
layout: 'post'
section: 'Cornerstone Framework'
sections: ['Cornerstone Framework']
title: '드롭다운'
outline: '드롭다운'
date: '2012-11-16'
tagstr: 'widget'
tags: ['post','widget','']
subsection: ‘본문’
order: '[4, 2, 1]'
---

## 드롭다운 

### 마크업

드롭다운 플러그인과 함께 사용되는 스타일로 Button dropdowns,Navbar등 각종 dropdown을 활용하는 위젯이 이것을 불러들여와 사용된다. 기본적으로 드롭다운 마크업은 화면상에 노출되지 않는다. 드롭다운 메뉴자체가 상위 메뉴를 통해 노출되는 형태이므로 상위 메뉴에서 트리거가 발생하면 노출이 된다.(플러그인 필요) 또한 드롭다운을 포함하는 상위 엘리먼트는 `position:relative` css 프로퍼티 선언을 해야한다.

<% codeMirrorRequiredBlock = (obj) => %>                                                                          
<script src='lib/codemirror.js'></script>                                                                         
<script src='mode/xml/xml.js'></script>                                                                           
<script src='mode/javascript/javascript.js'></script>                                                             
<script src='mode/css/css.js'></script>                                                                           
<script src='mode/htmlmixed/htmlmixed.js'></script>                                                               
<link rel='stylesheet' href='lib/codemirror.css' />                                                               
<style>                                                                                                           
.CodeMirror { float: left; width: 50%; border: 1px solid black; }                                                 
iframe { width: 49%; float: left; height: 300px; border: 1px solid black; border-left: 0px; }                     
</style>                                                                                                          
<% end %>                                                                                                         
<%- codeMirrorRequiredBlock '1' %>                                                                                
                                                                                                                  
<% codeMirrorBlock = (obj) => %>                                                                                  
<p>                                                                                                               
<div class='highlight'>                                                                                           
<textarea id=code_<%= obj.funcname %> name=code_<%= obj.funcname %>>                                              
<!doctype html>                                                                                                   
<html>                                                                                                            
  <head>                                                                                                          
    <meta charset=utf-8>                                                                                          
    <link rel='stylesheet' href='./dist/lib/bootstrap/css/bootstrap.css' />                                       
    <link rel='stylesheet' href='./dist/lib/bootstrap/css/bootstrap-responsive.css' />                            
    <link rel='stylesheet' href='./dist/ui/theme/white/css/cornerstone.css' />                                    
    <link rel='stylesheet' href='./dist/ui/widget-chart.css' />                                                   
    <link rel='stylesheet' href='./dist/ui/widget-media.css' />                                                   
    <link rel='stylesheet' href='./dist/ui/widget-scrollview.css' />                                              
    <script src='./dist/lib/jquery-1.8.1.min.js'></script>                                                        
    <script src='./dist/ui/widget-chart.js'></script>                                                             
    <script src='./dist/ui/widget-datatable.js'></script>                                                         
    <script src='./dist/ui/widget-editor.js'></script>                                                            
    <script src='./dist/ui/widget-listview.js'></script>                                                          
    <script src='./dist/ui/widget-media.js'></script>                                                             
    <script src='./dist/ui/widget-plugins.js'></script>                                                           
    <script src='./dist/ui/widget-scrollview.js'></script>                                                        
  </head>                                                                                                         
  <body>                                                                                                          
    <%- obj.func '1' %>                                                                                           
  </body>                                                                                                         
</html>                                                                                                           
</textarea>                                                                                                       
<iframe id=preview_<%= obj.funcname %>></iframe>                                                                  
<script>                                                                                                          
  var delay_<%= obj.funcname %>;                                                                                  
  var editor_<%= obj.funcname %> = CodeMirror.fromTextArea(document.getElementById('code_<%= obj.funcname %>'), { 
    mode: 'text/html',                                                                                            
    tabMode: 'indent',                                                                                            
    onChange: function() {                                                                                        
      clearTimeout(delay_<%= obj.funcname %>);                                                                    
      delay_<%= obj.funcname %> = setTimeout(updatePreview_<%= obj.funcname %>, 300);                             
    }                                                                                                             
  });                                                                                                             
  function updatePreview_<%= obj.funcname %>() {                                                                  
    var previewFrame = document.getElementById('preview_<%= obj.funcname %>');                                    
    var preview =  previewFrame.contentDocument ||  previewFrame.contentWindow.document;                          
    preview.open();                                                                                               
    preview.write(editor_<%= obj.funcname %>.getValue());                                                         
    preview.close();                                                                                              
  }                                                                                                               
  setTimeout(updatePreview_<%= obj.funcname %>, 300);                                                             
</script>                                                                                                         
</div>                                                                                                            
</p>                                                                                                              
<% end %>                                                                                                         

<% prv_1 = (contents) => %>
    <div class="dropdown">
        <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
            <li><a tabindex="-1" href="#">메뉴1</a></li>
            <li><a tabindex="-1" href="#">메뉴2</a></li>
            <li><a tabindex="-1" href="#">메뉴3</a></li>
            <li class="divider"></li>
            <li><a tabindex="-1" href="#">구분된 링크</a></li>
        </ul>
    </div>
<% end %><%- codeMirrorBlock {func : prv_1 , funcname : 'prv_1'} %>

### 옵션

드롭다운 컴포넌트는 우측 정렬 및 서브 드롭다운 등을 추가할 수 있는 옵션을 가지고 있다.

__메뉴 정렬__

`.dropdown-menu` 클래스에 `.pull-right` 클래스를 추가하면 드롭다운 메뉴는 우측으로 정렬된다.

<% prv_2 = (contents) => %>
    <ul class="dropdown-menu pull-right" role="menu" aria-labelledby="dLabel">
        ...
    </ul>
<% end %><%- codeMirrorBlock {func : prv_2 , funcname : 'prv_2'} %>

__드롭다운에 서브메뉴 추가하기__

서브메뉴를 추가할 `li` 태그에 `.dropdown-submenu`를 추가하고 그 안에 서브 메뉴로 사용할 드롭다운를 추가한다.

<% prv_3 = (contents) => %>
    <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
        ...
        <li class="dropdown-submenu">
            <a tabindex="-1" href="#">More options</a>
            <ul class="dropdown-menu">
            ...
            </ul>
        </li>
    </ul>
<% end %><%- codeMirrorBlock {func : prv_3 , funcname : 'prv_3'} %>

### 사용 예시

마크업에서 설명한 것처럼 드롭다운은 기본적으로 노출이 되지 않는다. 그래서 자바스크립트 플러그인을 통해 드롭다운을 노출시킬 수 있으며 메뉴 토글기능도 가능하다.

<% prv_4 = (contents) => %>
    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
        <li><a tabindex="-1" href="#">메뉴1</a></li>
        <li><a tabindex="-1" href="#">메뉴2</a></li>
        <li><a tabindex="-1" href="#">메뉴3</a></li>
        <li class="divider"></li>
        <li><a tabindex="-1" href="#">구분된 링크</a></li>
    </ul>
<% end %><%- codeMirrorBlock {func : prv_4 , funcname : 'prv_4'} %>

## 버튼 그룹

### 사용 예시

`adding description!`

__단일 버튼 그룹__

여러 `.btn` 클래스를 `.btn-group` 클래스로 랩핑한다.

<% prv_5 = (contents) => %>
    <div class="btn-group">
    <button class="btn">1</button>
    <button class="btn">2</button>
    <button class="btn">3</button>
    </div>
<% end %><%- codeMirrorBlock {func : prv_5 , funcname : 'prv_5'} %>

__여러 버튼 그룹__

복잡한 요소를 위해 여러 `.btn-group` 클래스를 결합하여 `.btn-toolbar` 클래스로 랩핑한다.

<% prv_6 = (contents) => %>
    <div class="btn-toolbar">
        <div class="btn-group">
            <button class="btn">1</button>
            <button class="btn">2</button>
            <button class="btn">3</button>
            <button class="btn">4</button>
        </div>
        <div class="btn-group">
            <button class="btn">5</button>
            <button class="btn">6</button>
            <button class="btn">7</button>
        </div>
        <div class="btn-group">
            <button class="btn">8</button>
            <button class="btn">10</button>
        </div>
    </div>
<% end %><%- codeMirrorBlock {func : prv_6 , funcname : 'prv_6'} %>

__수직버튼 그룹__

기본적으로 수평형태로 보여지는 버튼들을 수직(스택)형태로 보여지도록 하기 위해 `.btn-group` 클래스에  `.btn-group-vertical` 클래스를 추가해야 한다.

<% prv_7 = (contents) => %>
    <div class="btn-group btn-group-vertical">
        <button type="button" class="btn"><i class="icon-align-left"></i></button>
        <button type="button" class="btn"><i class="icon-align-right"></i></button>
        <button type="button" class="btn"><i class="icon-align-center"></i></button>
        <button type="button" class="btn"><i class="icon-align-justify"></i></button>
    </div>
<% end %><%- codeMirrorBlock {func : prv_7 , funcname : 'prv_7'} %>


## 버튼 드롭다운

### 사용예시

__기본 버튼 드롭다운__

버튼 드롭다운은 드롭다운을 보여 주기 위한 toggle형태의 버튼과 드롭다운이 필요하다. 이 2가지 요소를 `.btn-group` 클래스로 감싼다.

<% prv_8 = (contents) => %>
    <div class="btn-group">
        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">
            Action
            <span class="caret"></span>
        </a>
        <ul class="dropdown-menu">
            <!-- dropdown menu links -->
        </ul>
    </div>
<% end %><%- codeMirrorBlock {func : prv_8 , funcname : 'prv_8'} %>

__버튼 드롭다운의 toggle 버튼의 크기__

버튼 드롭다운에 toggle 버튼은 `.btn-large`, `.btn-small`, `.btn-mini`  3가지 크기의 클래스로 표현 할 수 있다.

__분리된 버튼 드롭다운__

분리된 버튼 드롭다운은 버튼 텍스트와 역삼각형(caret)에 구분선을 보여준다. 기본 버튼 드롭다운에서는 `a` 태그 내부에 텍스트와 역삼각형(caret)를 같이 포함하지만 분리된 버튼 드롭다운에서는 텍스트와 역삼각형(caret) 부분을 분리하며 `button` 태그를 사용한다.

<% prv_9 = (contents) => %>
    <div class="btn-group">
        <button class="btn">Action</button>
        <button class="btn dropdown-toggle" data-toggle="dropdown">
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <!-- dropdown menu links -->
        </ul>
    </div>
<% end %><%- codeMirrorBlock {func : prv_9 , funcname : 'prv_9'} %>

__드롭업 메뉴__

드롭업은 드롭다운에서 트리거 역할을 하는 toggle 버튼 

<% prv_10 = (contents) => %>
    <div class="btn-group dropup">
        <button class="btn">Dropup</button>
        <button class="btn dropdown-toggle" data-toggle="dropdown">
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <!-- dropdown menu links -->
        </ul>
    </div>
<% end %><%- codeMirrorBlock {func : prv_10 , funcname : 'prv_10'} %>
