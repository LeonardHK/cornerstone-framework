---
layout: 'post'
section: 'Cornerstone Framework'
sections: ['Cornerstone Framework']
title: 'Featured'
outline: '피처드 위젯은 플러그인 위젯보다 기능적인 면에서 많은 기능을 제공하는 위젯이다...'
date: '2012-11-16'
tagstr: 'widget'
tags: ['post','widget','']
order: '[4, 4]'
thumbnail: '4.4.00.featured.png'
---


# Featured

피처드 위젯은 플러그인 위젯보다 기능적인 면에서 많은 기능을 제공하는 위젯이다.

> Cornerstone의 피처드 위젯는 data-attribute(DATA-API)와 javascript방식을 통해 사용이 가능하며 javascript에 익숙하지 않은 사용자라도 data-attribute를 통해 사용이 용이히다.

아래는 피처드 위젯 플러그인 / 모듈의 종류와 각 기능에 대한 간단한 설명이다.

1. ScrollView : 터치기반에서 유용하게 사용되는 스크롤뷰 PC환경에서도 휠로 스크롤이 가능한 스크롤뷰.
2. ListView : 리스트에 최적화 기술을 적용해 Content가 아무리 많아도 최적화 옵션을 활성화시키면 항상 일정한 퍼포먼스를 유지하는 리스트뷰.
3. Media : 동일한 마크업으로 각 디바이스별로 최적화된 화면을 보여주며 다양한 인코딩을 지원하는 미디어 위젯. Cornerstone의 반응형 웹 기술이 적용됨.
4. Editor : 동일한 마크업으로 각 디바이스별로 최적화된 화면을 보여주는 에디터 위젯.
5. Chart : 바(스택, 그룹), 라인, 파이 차트 등을 제공하는 차트.
6. DataTable : 정해진 JSON 규격 또는 마크업을 통해 사용자는 간단한 테이블만으로 페이징처리, 소팅, 검색 등의 기능을 제공하는 데이터테이블.


# MVC 프레임워크 피처드 모듈

모듈명 | 플러그인 형태 | 모듈 형태
:-- | :-- | :--
widget-scrollview | O | X
widget-listview | O | O
widget-media | O | X
widget-editor | O | X
widget-chart | O | O
widget-datatable | O | O


### 플러그인과 모듈 형태의 차이점
-  플러그인 형태는 일반적으로 많이 사용되는 jQuery 플러그인 형태를 따른다. 다음은 플러그인 형태를 사용하는 예시이다.
```
$("#example").featuredListView({
    optimization: true
});
``` 
위 예시에서는  `id`가 `example`인 엘리먼트에 `featuredListView`라는 플러그인을 적용시키며, 플러그인을 적용할 떄 `featuredListView`의 매개변수에 `json`형태로 옵션을 부여 할 수 있다. 이 예시에서는 `optimization`라는 옵션을 `true` 설정해서 사용된 플러그인의 예시이다. 

 
- 모듈 형태는 MVC 프레임워크에서 사용되는 AMD방식의 모듈이다.  다음은 모듈 형태를 사용하는 예시이다.
```
define([
    "backbone",
    "widget-listview" 
], function (Backbone, ListView) {
    // Something...
});
``` 
위 예시에서 `widget-listview`라는 모듈을 선언하면, 해당 모듈에 적용되는 `stylesheet`가 있는 경우 Lazy 로딩을 통해 불러오며, 선언된 순서대로 function의 매개변수로 ListView 를 넘겨 준다. 다음은 매개변수로 넘어온 ListView 뷰 객체를 사용하는 예시이다.
```
this.listView = new ListView({
    el:'#listView',
    optimization:false,
});
```
위 예시에서  뷰 객체는 플러그인 형태와는 다르게  ListView를 적용할 엘리먼트를 옵션을 통해 지정하지만 플러그인 형태의 옵션을 동일하게 포함하고 있다.

### data API 지원여부

모듈명 | 지원여부
:-- | :--
widget-scrollview | O
widget-listview | X
widget-media | O
widget-editor | X
widget-chart | O
widget-datatable | O

<script type="text/javascript">
var $table = $("table");
$table.addClass("table table-bordered");
$table.find("thead tr > th").addClass("fixed_table");
$table.find("tbody tr > td").addClass("fixed_table");
</script>
