// Generated by CoffeeScript 1.3.3

/*
 CoffeeScript Compiler v1.3.3
 Released under the MIT License
 */


/*
 스크롤뷰를 감싸주는 엘리먼트를 생성해주며 createListElementHelper를 통해 아이템 항목까지 합쳐서 반환한다.
 */


(function () {
    var createListElementHelper, itemElement, items, itemsElement, loaded, scrollViewElementHelper;

    this.scrollViewElementHelper = scrollViewElementHelper = function (className, classListName) {
        if (className == null) {
            className = "scrollview";
        }
        if (classListName == null) {
            classListName = "list";
        }
        return "<div id=\"scrollView\" class=\"" + className + "\">\n  <ul id=\"itemList\" class=\"" + classListName + "\">\n\n  </ul>\n</div>";
    };

    /*
     JSON을 가지고 있는 Array 아이템을 li 태그로 리스트 엘리먼트로 생성해주는 헬퍼이다. 단독으로 쓰일 수도 있고, scrollViewElementHeler를 통해 Scroll
     View로 내부에 아이템 리스를 넣을 수 도 있다.
     */


    this.createListElementHelper = createListElementHelper = function (items, unit) {
        var i, item, listElement, unit, _i, _j, _len, _ref;
        if (items == null) {
            items = {
                title:"test",
                link:"/test"
            };
        }
        listElement = "";
//    for (i = _i = 1, _ref = unit * 10; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
//      if (i === 1) {
//        listElement += "<li index=\"0\" data-start-num=\"" + i + "\" data-end-num=\"" + (i + unit - 1) + "\"><ul>";
//      }
//      for (_j = 0, _len = items.length; _j < _len; _j++) {
//        item = items[_j];
//        listElement += "<li><a href=\"" + item.link + "\"><img src=\"" + item.imgUrl + "\" alt=\"\"/>" + item.title + "<span class=\"label label-info\">" + i + "</span></a></li>";
//      }
//      if (i % unit === 0) {
//        listElement += "</ul></li><li index=\"" + (i / 100) + "\" data-start-num=\"" + i + "\" data-end-num=\"" + (i + unit - 1) + "\"><ul>";
//      }
//      if (i === unit * 10) {
//        listElement += "</ul></li>";
//      }
//    }

        for (i = _i = 1, _ref = unit * 10; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
            for (_j = 0, _len = items.length; _j < _len; _j++) {
                item = items[_j];
                listElement += "<li><a href=\"" + item.link + "\"><img src=\"" + item.imgUrl + "\" alt=\"\"/>" + item.title + i + "<span class=\"label label-info\">" + i + "</span></a></li>";
            }
        }
        return "" + listElement;
    };

    this.items = items = [
        {
            title:"헬로우월드 ",
            link:"#1",
            imgUrl:"http://twitter.github.com/bootstrap/assets/img/bootstrap-mdo-sfmoma-02.jpg"
        }
    ];

    $("#page").html(scrollViewElementHelper());

    itemsElement = createListElementHelper(items, 10);

    itemElement = $.grep($(itemsElement), function (n, i) {
        return n;
    });

    $("#itemList").append(itemElement);

    loaded = function () {
        var scrollNav;
        return scrollNav = new iScroll('scrollView', {
            onScrollStart:function () {
                return console.log("start");
            },
            onScrollEnd:function () {
                return console.log(this.x, this.y);
            }
        });
    };

//  document.addEventListener('DOMContentLoaded', loaded, false);

}).call(this);
